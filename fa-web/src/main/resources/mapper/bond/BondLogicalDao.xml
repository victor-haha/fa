<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//En"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yidu.bond.dao.BondLogicalDao">
    <!--资金调拨表字段模板-->
    <sql id="capitalTransferColumn">
        capitalTransferId,capitalTransferNo,fundId,fundNo,fundName,accountId,accountNo,accountName,transferAmount,transferDate,transferFlag,transferType
    </sql>

    <!--资金调拨表插入数据‘占位符’ 字段模板-->
    <sql id="insertCapitalTransfer">
        #{capitalTransferId},
        #{capitalTransferNo},
        #{fundId},
        #{fundNo},
        #{fundName},
        #{accountId},
        #{accountNo},
        #{accountName},
        #{transferAmount},
        #{transferDate},
        #{transferFlag},
        #{transferType}
    </sql>
    <!--债券交易数据表字段模板-->
    <sql id="bondTradeColumn">
        bondTradeId,bondTradeNo,fundId,fundNo,fundName,bondId,bondCode,bondName,managerId,managerName,brokerId,brokerName,tradeType,tradeFlag,tradePrice,tradeDate,share,turnover,stampTax,managementFees,transferFee,commission,brokerage,total,couponRate,tradeStatus,description
    </sql>
    <!--债券交易数据表插入数据‘占位符’ 字段模板-->
    <sql id="insertColumn">
        #{bondTradeId},
        #{bondTradeNo},
        #{fundId},
        #{fundNo},
        #{fundName},
        #{bondId},
        #{bondCode},
        #{bondName},
        #{managerId},
        #{managerName},
        #{brokerId},
        #{brokerName},
        #{tradeType},
        #{tradeFlag},
        #{tradePrice},
        #{tradeDate},
        #{share},
        #{turnover},
        #{stampTax},
        #{managementFees},
        #{transferFee},
        #{commission},
        #{brokerage},
        #{total},
        #{couponRate},
        #{tradeStatus},
        #{description}
    </sql>
    <!--证券库存数据表字段模板-->
    <sql id="securitiesInventoryColumn1">
        securitiesInventoryId,
        sechuritiesInventoryNo,
        securitiesId,
        securitiesNo,
        securitiesName,
        fundId,
        fundNo,
        fundName,
        accountId,
        accountNo,
        accountName,
        price,
        share,
        turnover,
        securitiesType,
        statisticalDate,
        description
    </sql>
    <!--证券库存数据表字段模板-->
    <sql id="securitiesInventoryColumn2">
        securitiesInventoryId,
        sechuritiesInventoryNo,
        securitiesId,
        securitiesNo,
        securitiesName,
        fundId,
        fundNo,
        fundName,
        accountId,
        accountNo,
        accountName,
        price,
        share,
        turnover,
        securitiesType,
        statisticalDate,
        description
    </sql>
    <!--证券库存插入数据‘占位符’ 字段模板-->
    <sql id="insertSecuritiesInventory">
        #{securitiesInventoryId},
        #{sechuritiesInventoryNo},
        #{securitiesId},
        #{securitiesNo},
        #{securitiesName},
        #{fundId},
        #{fundNo},
        #{fundName},
        #{accountId},
        #{accountNo},
        #{accountName},
        #{price},
        #{share},
        #{turnover},
        #{securitiesType},
        #{statisticalDate},
        #{description}
    </sql>
    <!--现金库存字段1-->
    <sql id="cashInventoryColumn1">
        ci.cashInventoryId,
        ci.cashInventoryNo,
        ci.fundId,
        ci.fundNo,
        ci.fundName,
        ci.accountId,
        ci.accountNo,
        ci.accountName,
        ci.cashBalance,
        ci.statisticalDate,
        ci.description
    </sql>
    <!--现金库存字段2-->
    <sql id="cashInventoryColumn2">
        cashInventoryId,
        cashInventoryNo,
        fundId,
        fundNo,
        fundName,
        accountId,
        accountNo,
        accountName,
        cashBalance,
        statisticalDate,
        description
    </sql>

    <!--现金库存添加占位符字段-->
    <sql id="insertCashInventory">
        #{cashInventoryId},
        #{cashInventoryNo},
        #{fundId},
        #{fundNo},
        #{fundName},
        #{accountId},
        #{accountNo},
        #{accountName},
        #{cashBalance},
        #{statisticalDate},
        #{description}
    </sql>
    <!--现金调拨单数据映射-->
    <resultMap id="capitalMap" type="CapitalTransfer">
        <id column="capitalTransferId" property="capitalTransferId"/>
        <result column="capitalTransferNo" property="capitalTransferNo"/>
        <result column="fundId" property="fundId"/>
        <result column="fundNo" property="fundNo"/>
        <result column="fundName" property="fundName"/>
        <result column="accountId" property="accountId"/>
        <result column="accountNo" property="accountNo"/>
        <result column="accountName" property="accountName"/>
        <result column="turnover" property="transferAmount"/>
        <result column="transferDate" property="transferDate"/>
        <result column="tradeType" property="transferFlag"/>
        <result column="transferType" property="transferType"/>
    </resultMap>
    <!--证券库存数据映射-->
    <resultMap id="securitiesInventoryMap" type="SecuritiesInventory">
        <id column="securitiesInventoryId" property="securitiesInventoryId"/>
        <result column="sechuritiesInventoryNo" property="sechuritiesInventoryNo"/>
        <result column="securitiesId" property="securitiesId"/>
        <result column="securitiesName" property="securitiesName"/>
        <result column="fundId" property="fundId"/>
        <result column="fundNo" property="fundNo"/>
        <result column="fundName" property="fundName"/>
        <result column="accountId" property="accountId"/>
        <result column="accountNo" property="accountNo"/>
        <result column="accountName" property="accountName"/>
        <result column="tradePrice" property="price"/>
        <result column="share" property="share"/>
        <result column="turnover" property="turnover"/>
        <result column="securitiesType" property="securitiesType"/>
        <result column="statisticalDate" property="statisticalDate"/>
        <result column="description" property="description"/>
    </resultMap>
    <sql id="InterestAccrualColumn">
        si.securitiesInventoryId,
        si.sechuritiesInventoryNo,
        si.securitiesId,
        si.securitiesNo,
        si.securitiesName,
        si.fundId,
        si.fundNo,
        si.fundName,
        si.accountId,
        si.accountNo,
        si.accountName,
        si.price,
        si.share,
        si.turnover,
        si.securitiesType,
        si.statisticalDate,
        si.description
    </sql>
    <!--按条件查询债券交易数据查询-->
    <select id="findBondTrade" resultType="BondTrade" parameterType="BondTradePaging">
        select * from t_bond_trade
        <where>
            <if test="bondTradeNo != null and bondTradeNo != ''">
                and bondTradeNo like concat('%',#{bondTradeNo},'%')
            </if>
            <if test="fundName != null and fundName != ''">
                and fundName like concat('%',#{fundName},'%')
            </if>
            <if test="bondName != null and bondName != ''">
                and bondName like concat('%',#{bondName},'%')
            </if>
            <if test="managerName != null and managerName != ''">
                and managerName like concat('%',#{managerName},'%')
            </if>
            <if test="brokerName != null and brokerName != ''">
                and brokerName like concat('%',#{brokerName},'%')
            </if>
            <if test="tradeStatus != null and tradeStatus != ''">
                and tradeStatus = #{tradeStatus}
            </if>
        </where>
        limit #{page},#{limit}
    </select>

    <!--搜索查询所有债券交易数据条数-->
    <select id="findBondTradeCount" resultType="Long" parameterType="BondTradePaging">
        select count(bondId) from t_bond_trade
        <where>
            <if test="bondTradeNo != null and bondTradeNo != ''">
                and bondTradeNo like concat('%',#{bondTradeNo},'%')
            </if>
            <if test="fundName != null and fundName != ''">
                and fundName like concat('%',#{fundName},'%')
            </if>
            <if test="bondName != null and bondName != ''">
                and bondName like concat('%',#{bondName},'%')
            </if>
            <if test="managerName != null and managerName != ''">
                and managerName like concat('%',#{managerName},'%')
            </if>
            <if test="brokerName != null and brokerName != ''">
                and brokerName like concat('%',#{brokerName},'%')
            </if>
            <if test="tradeStatus != null and tradeStatus != ''">
                and tradeStatus = #{tradeStatus}
            </if>
        </where>
    </select>

    <!--添加债券交易数据-->
    <insert id="addBondTrade" parameterType="BondTrade">
        insert Into t_bond_trade(<include refid="bondTradeColumn"/>)
        value(<include refid="insertColumn"/> );
    </insert>
    <!--修改债券交易状态-->
    <update id="updateTradeStatus" parameterType="String">
        update t_bond_trade
        set tradeStatus = #{tradeStatus}
        where bondTradeId = #{bondTradeId}
    </update>
    <!--按bondTradeId 联表t_capital_transfer,t_account,t_bond_trade 查询 ，返回资金调度对象-->
    <select id="findCapitalTransferByBondTradeId" resultMap="capitalMap" parameterType="String">
        select bt.fundId,bt.fundNo,bt.fundName,bt.turnover,bt.tradeType,act.accountId,act.accountNo,act.accountName
        from t_account as act,t_bond_trade as bt
        where  act.fundId  = bt.fundId
        and bt.bondTradeId = #{bondTradeId}
    </select>

    <!--向资金调拨表中插入数据-->
    <insert id="addCapitalTransfer" parameterType="CapitalTransfer">
        insert Into t_capital_transfer(<include refid="capitalTransferColumn"/>)
        value(<include refid="insertCapitalTransfer"/>)
    </insert>

    <!--通过bondTradeId查询交易记录-->
    <select id="findBondTradeById" resultType="BondTrade" parameterType="String">
        select <include refid="bondTradeColumn"/>
        from t_bond_trade
        where bondTradeId = #{bondTradeId}
    </select>

    <!--按基金id和债券id查询证券库存数据-->
    <select id="findBondInventory" resultType="SecuritiesInventory" parameterType="String">
        select <include refid="securitiesInventoryColumn1"/>
        from t_securities_inventory
        where fundId = #{fundId}
        and securitiesId = #{bondId}
        having statisticalDate = max(statisticalDate)
        limit 0,1
    </select>
    <!--查询到账户信息，及单位成本，赋值到证券库存对象中-->
    <select id="findSIByFundId" resultMap="securitiesInventoryMap" parameterType="String">
        select a.accountId,a.accountNo,a.accountName,bt.tradePrice
        from t_bond_trade as bt,t_account as a
        where bt.fundId = a.fundId
        and bt.fundId = #{fundId}
        and bt.bondTradeId = #{bondTradeId}
    </select>
    <!--添加证券库存数据-->
    <insert id="addSecuritiesInventory" parameterType="SecuritiesInventory">
        insert Into t_securities_inventory(<include refid="securitiesInventoryColumn2"/>)
        value(<include refid="insertSecuritiesInventory"/>)
    </insert>
    <!--修改证券库存数据-->
    <update id="updateSecuritiesInventory" parameterType="SecuritiesInventory">
        update t_securities_inventory
        set statisticalDate = #{statisticalDate},share = #{share},turnover = #{turnover}
        where securitiesInventoryId = #{securitiesInventoryId}
    </update>
    <!--按债券交易中的fundId和bondId,联表查询出现金对应的现金库存数据对象-->
    <select id="findCashInventory" resultType="CashInventory" parameterType="String">
        select <include refid="cashInventoryColumn1"/>
        from t_securities_inventory as si,t_account as a,t_cash_inventory ci
        where si.fundId = #{fundId}
        and si.securitiesId = #{securitiesId}
        and si.accountId = a.accountId
        and a.accountId = ci.accountId
        having ci.statisticalDate = (select max(statisticalDate) from t_cash_inventory)
    </select>
    <!--将对应的现金账户更新-->
    <update id="updateCashInventory" parameterType="CashInventory">
        update t_cash_inventory
        set statisticalDate = #{statisticalDate},cashBalance = #{cashBalance}
        where cashInventoryId = #{cashInventoryId}
    </update>
    <!--添加新的现金库存数据-->
    <insert id="addCashInventory" parameterType="CashInventory">
        insert Into t_cash_inventory (<include refid="cashInventoryColumn2"/>)  value(<include refid="insertCashInventory" />)
    </insert>

    <!--条件查询需要计息的债券并分页-->
    <select id="findInterestAccrual" resultType="SecuritiesInventory" parameterType="SecuritiesInventoryPaging">
        select <include refid="InterestAccrualColumn"/> from t_securities_inventory as si,t_fundarap_inventory as fi
        <where>
            <if test="securitiesNo != null and securitiesNo != ''">
                and si.securitiesNo like concat('%',#{securitiesNo},'%')
            </if>
            <if test="securitiesName != null and securitiesName != ''">
                and si.securitiesName like concat('%',#{securitiesName},'%')
            </if>
            <if test="fundNo != null and fundNo != ''">
                and si.fundNo like concat('%',#{fundNo},'%')
            </if>
            <if test="fundName != null and fundName != ''">
                and si.fundName like concat('%',#{fundName},'%')
            </if>
            <if test="securitiesType != null and securitiesType != ''">
                and si.securitiesType = #{securitiesType}
            </if>
            <if test="startStatisticalDate != null and endStatisticalDate != null">
                and si.statisticalDate between #{startStatisticalDate} and #{endStatisticalDate}
            </if>
            and si.securitiesId = fi.securitiesId
            and si.fundId = fi.fundId
            and TO_DAYS(fi.businessDate) = TO_DAYS(NOW())
        </where>
        limit #{page},#{limit}
    </select>
    <!--having securitiesInventoryId not in(select securitiesInventoryId from t_Interestaccrualok)
        limit #{page},#{limit}-->
    <!--查询需要计息的债券库存条数-->
    <select id="findInterestAccrualCount" resultType="Long" parameterType="SecuritiesInventoryPaging">
        select count(securitiesInventoryId) from t_securities_inventory as si,t_fundarap_inventory as fi
        <where>
            <if test="securitiesNo != null and securitiesNo != ''">
                and si.securitiesNo like concat('%',#{securitiesNo},'%')
            </if>
            <if test="securitiesName != null and securitiesName != ''">
                and si.securitiesName like concat('%',#{securitiesName},'%')
            </if>
            <if test="fundNo != null and fundNo != ''">
                and si.fundNo like concat('%',#{fundNo},'%')
            </if>
            <if test="fundName != null and fundName != ''">
                and si.fundName like concat('%',#{fundName},'%')
            </if>
            <if test="securitiesType != null and securitiesType != ''">
                and si.securitiesType = #{securitiesType}
            </if>
            <if test="startStatisticalDate != null and endStatisticalDate != null">
                and si.statisticalDate between #{startStatisticalDate} and #{endStatisticalDate}
            </if>
            and si.securitiesId = fi.securitiesId
            and si.fundId = fi.fundId
            and TO_DAYS(fi.businessDate) = TO_DAYS(NOW())
        </where>
    </select>
    <!--and securitiesInventoryId not in(select securitiesInventoryId from t_Interestaccrualok)-->
</mapper>